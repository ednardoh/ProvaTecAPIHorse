unit Controllers.Endereco;

interface

uses Horse, DataSet.Serialize, System.JSON, Data.DB,
     DAO.Endereco, System.SysUtils, Horse.GBSwagger.Register,
     Horse.GBSwagger.Controller, GBSwagger.Path.Attributes,
     Model.Endereco;

  procedure Registry;
  procedure ListById(Req: THorseRequest; Res: THorseResponse; Next: TProc);
  procedure ListAll(Req: THorseRequest; Res: THorseResponse; Next: TProc);
  procedure Insert(Req: THorseRequest; Res: THorseResponse; Next: TProc);
  procedure Update(Req: THorseRequest; Res: THorseResponse; Next: TProc);
  procedure Delete(Req: THorseRequest; Res: THorseResponse; Next: TProc);



implementation

{ TEnderecoControllers }

procedure ListById(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  LDAOEndereco: TEnderecoDAO;
  iId: Integer;
begin
  try
    LDAOEndereco := TEnderecoDAO.Create;
    iId := StrToInt(Req.Params.Items['id']);
    Res.Send<TJSONArray>(LDAOEndereco.ListById(iId));
  finally
    LDAOEndereco.Free;
  end;
end;

procedure ListAll(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  LDAOEndereco: TEnderecoDAO;
begin
  try
    LDAOEndereco := TEnderecoDAO.Create;
    Res.Send<TJSONArray>(LDAOEndereco.ListAll);
  finally
    LDAOEndereco.Free;
  end;
  //Res.Send('[{"id": 1, "cep": "61907-020", "logradouro": "Rua Geraldo Neris de Souza", "complemento": ".", "bairro": "Furna da Onça", "cidade": "Maracanau", "localidade": ".", "uf": "CE"}]');
end;

procedure Insert(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  LDAOEndereco: TEnderecoDAO;
  oJson: TJSONObject;
  EnderecoModel: TModelEndereco;
begin
  try
    if Req.Body.IsEmpty then
      raise Exception.Create('Dados do Endereço não encontrado.');
    LDAOEndereco := TEnderecoDAO.Create;
    EnderecoModel := TModelEndereco.Create;
    oJson := Req.Body<TJSONObject>;
    EnderecoModel.id          := 0; //GetId vai gerar automático na DAO
    EnderecoModel.cep         := oJson.GetValue<string>('cep');
    EnderecoModel.logradouro  := oJson.GetValue<string>('logradouro');
    EnderecoModel.complemento := oJson.GetValue<string>('complemento');
    EnderecoModel.bairro      := oJson.GetValue<string>('bairro');
    EnderecoModel.cidade      := oJson.GetValue<string>('cidade');
    EnderecoModel.localidade  := oJson.GetValue<string>('localidade');
    EnderecoModel.uf          := oJson.GetValue<string>('uf');
    LDAOEndereco.Insert(EnderecoModel);
    Res.Send<TJSONObject>(oJson).Status(THTTPStatus.Created);
  finally
    LDAOEndereco.Free;
    EnderecoModel.Free;
  end;
end;

procedure Update(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  LDAOEndereco: TEnderecoDAO;
  oJson: TJSONObject;
  EnderecoModel: TModelEndereco;
begin
  try
    if Req.Body.IsEmpty then
      raise Exception.Create('Dados do Endereço não encontrado.');
    LDAOEndereco := TEnderecoDAO.Create;
    EnderecoModel := TModelEndereco.Create;
    oJson := Req.Body<TJSONObject>;
    EnderecoModel.id          := oJson.GetValue<Integer>('id');
    EnderecoModel.cep         := oJson.GetValue<string>('cep');
    EnderecoModel.logradouro  := oJson.GetValue<string>('logradouro');
    EnderecoModel.complemento := oJson.GetValue<string>('complemento');
    EnderecoModel.bairro      := oJson.GetValue<string>('bairro');
    EnderecoModel.cidade      := oJson.GetValue<string>('cidade');
    EnderecoModel.localidade  := oJson.GetValue<string>('localidade');
    EnderecoModel.uf          := oJson.GetValue<string>('uf');
    LDAOEndereco.Update(EnderecoModel);
    Res.Send<TJSONObject>(oJson).Status(THTTPStatus.OK);
  finally
    LDAOEndereco.Free;
    EnderecoModel.Free;
  end;
end;

procedure Delete(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  LDAOEndereco: TEnderecoDAO;
  iId: Integer;
begin
  if Req.Params.Count = 0 then
    raise Exception.Create('id não encontrado.');
  try
    LDAOEndereco := TEnderecoDAO.Create;
    iId := StrToInt(Req.Params.Items['id']);
    LDAOEndereco.Delete(iId);
    Res.Send<TJSONObject>(TJSONObject.Create.AddPair('message', 'Endereço deletado com sucesso.'));
  finally
    LDAOEndereco.Free;
  end;
end;

procedure Registry;
begin
  THorse.Group.Prefix('v1')
  .Get('/endereco/:id'     , ListById)
  .Get('/endereco'         , ListAll)
  .Post('/endereco'        , Insert)
  .Put('/endereco'         , Update)
  .Delete('/endereco/:id'  , Delete);
end;

end.


